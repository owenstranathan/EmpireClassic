//
//  map.cpp
//  EmpireClassic
//
//  Created by Owen Stranathan on 4/27/15.
//  Copyright (c) 2015 Owen Stranathan. All rights reserved.
//

#include "empire.hpp"
#include "ResourcePath.hpp"


////////////////////////////////////////////////////////////////////////////////////////
//TILE//////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
void Tile::draw(sf::RenderWindow & window)
{
    sprite.setPosition(x*32, y*32);
    window.draw(sprite);
}

////////////////////////////////////////////////////////////////////////////////////////
//PIECE/////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
void Piece::draw(sf::RenderWindow & window)
{
    sprite.setPosition(x*32, y*32);
    window.draw(sprite);
}

////////////////////////////////////////////////////////////////////////////////////////
//VISITOR///////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

struct TypeVisitor : public Visitor
{
    Type type;
    void visit(Transport * t){ type = TRANSPORT; }
    void visit(City * c){ type = CITY; }
    //add stuff for other types
    
};

Type getType(Piece * piece)
{
    TypeVisitor v;
    piece->accept(v);
    return v.type;
}


////////////////////////////////////////////////////////////////////////////////////////
//TRANSPORT/////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

Transport::Transport(int arg_x, int arg_y) : Piece(arg_x, arg_y)
{ }


////////////////////////////////////////////////////////////////////////////////////////
//CITY//////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
City::City(int arg_x, int arg_y, int arg_id) : Piece(arg_x, arg_y), id(arg_id)
{ }



